//Import AWS
import { SageMakerRuntimeClient, InvokeEndpointCommand } from "@aws-sdk/client-sagemaker-runtime"; 

//Create SageMakerRuntimeClient
const client = new SageMakerRuntimeClient({});

const endpointData = {
    "instances":
      [
        {"start":"2023-12-22 00:00:00","target":[34827.87658400,34616.48093600,34053.56715000,34516.65257300,33671.32345300,34399.99208500,33714.75429600,33321.23109500,33379.31578800,33492.82371800,34994.62155500,35602.44741100,33937.70668300,34972.08631000,34967.34163100,34827.30627200,34796.17674200,37189.91878400,36523.73100000,36954.62547900,36705.24863600,33888.20043300,33939.89287900,33056.19443500,33673.04231000,34169.57019500,33882.94881000,32735.51275000,32998.11766300,33027.43328400,32935.77939300,31341.82864200,31602.88896000,31751.23344800,31653.17938900,33128.40227100,33363.75102300,33292.80262600,34300.06867000,34013.64531000,33727.61800000,34125.99677400,34218.72000000,34069.08438900,33729.89924800,33829.56127000,34138.67829500,35129.31816000,35873.13966500,37333.86711700,37823.63838900,38258.42207900,39539.46956700,39367.04523900,41026.95415700,41094.14800000,41287.50753100,40906.13514400,41298.24840700,41010.76363300,41394.21132200,41069.90181900,40625.55748200,40194.44121500,40847.18706200,40974.42208500,43150.81188700,45179.27701400,49452.46641000,48421.84925800,49417.45559000,49100.12448800,49992.57563700,54057.42689100,50475.78832100,52337.24708400,52930.63295700,53961.17089900,54110.94116700,54619.95254800,57093.06301000,56597.13712100,57880.65596100,56547.17937400,55050.83118500,51724.62902300,54174.47550800,53553.87307900,49060.61454000,53736.46797100,51883.55596700,50533.31854400,50686.48692100,53237.03307900,55351.95592100,55437.49480000,55027.17907900,56065.31326000,55328.61273400,55253.71967900]}
      ],
      "configuration":
         {
           "num_samples": 50,
            "output_types":["mean","quantiles","samples"],
            "quantiles":["0.1","0.9"]
         }
  }

//Calls endpoint and logs results
async function invokeEndpoint () {
    //Create and send command with data
    const command = new InvokeEndpointCommand({
        EndpointName: "btcEndpoint",
        Body: JSON.stringify(endpointData),
        ContentType: "application/json",
        Accept: "application/json"
    });
    const response = await client.send(command);

    //Must install @types/node for this to work
    let predictions = JSON.parse(Buffer.from(response.Body).toString('utf8'));
    console.log(predictions);
    console.log(JSON.stringify(predictions));
}

invokeEndpoint();